services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # host
      - "29092:29092" # host (optional for debugging), not required for other containers
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - kafka-network

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - kafka
    ports:
      - "8083:8083"
      - "8778:8778"  # Jolokia JMX metrics
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      KAFKA_JMX_OPTS: "-javaagent:/opt/jolokia-jvm-agent.jar=port=8778,host=0.0.0.0"
    command:
      - bash
      - -c
      - |
        /bin/bash -c "
          echo 'Installing Jolokia JMX agent...'
          cd /opt
          curl -L -o jolokia-jvm-agent.jar https://repo1.maven.org/maven2/org/jolokia/jolokia-jvm/1.7.2/jolokia-jvm-1.7.2.jar
          
          echo 'Installing Connectors...'
          
          confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:latest
          confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:latest
          confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:latest
          confluent-hub install --no-prompt confluentinc/kafka-connect-s3:latest
          confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:latest
          confluent-hub install --no-prompt confluentinc/kafka-connect-salesforce:latest
          confluent-hub install --no-prompt debezium/debezium-connector-mysql:latest
          
          echo 'Installing AWS EventBridge connector from GitHub...'
          mkdir -p /usr/share/confluent-hub-components/aws-eventbridge
          cd /tmp
          if curl -L -o eventbridge-kafka-connector.zip https://github.com/aws/eventbridge-kafka-connector/releases/download/v1.4.0/eventbridge-kafka-connector-with-dependencies.zip; then
            if jar -xf eventbridge-kafka-connector.zip; then
              mv *.jar /usr/share/confluent-hub-components/aws-eventbridge/
              echo 'EventBridge connector installation complete'
            else
              echo 'Failed to extract EventBridge connector'
            fi
            rm -f eventbridge-kafka-connector.zip
          else
            echo 'Failed to download EventBridge connector'
          fi
          
          echo 'Launching Kafka Connect worker'
          exec /etc/confluent/docker/run
        "
    networks:
      - kafka-network

  proxy:
    build:
      context: ../proxy
      dockerfile: Dockerfile
    container_name: kconnect-proxy
    depends_on:
      - kafka-connect
    ports:
      - "8080:8080"
    environment:
      KAFKA_CONNECT_URL: http://kafka-connect:8083
      JOLOKIA_URL: http://kafka-connect:8778/jolokia
      PORT: 8080
    networks:
      - kafka-network

  web:
    build:
      context: ../web
      dockerfile: Dockerfile
    container_name: kconnect-web
    depends_on:
      - proxy
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      # Browser connects to proxy via localhost (host machine)
      NEXT_PUBLIC_PROXY_URL: http://localhost:8080
      # Next.js SSR connects to proxy via container network
      INTERNAL_PROXY_URL: http://kconnect-proxy:8080
      NEXT_PUBLIC_CLUSTER_ID: default
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
